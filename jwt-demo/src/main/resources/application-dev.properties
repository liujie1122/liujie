# mongodb 依赖
spring.data.mongodb.uri=mongodb://localhost:27017/test
#spring.data.mongodb.uri=mongodb://name:pass@localhost:27017/test，其中name是用户名，pass是密码
#spring.data.mongodb.uri=mongodb://192.168.1.1:20000,192.168.1.2:20000,192.168.252.12:20000/test
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/jwtTest?useSSL=false&serverTimezone=UTC&characterEncoding=utf-8
#spring.datasource.url=jdbc:mysql://192.168.60.111:3306/dataTest?useSSL=false&serverTimezone=UTC&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=root
#spring.data.elasticsearch.cluster-name=elasticsearch
#spring.data.elasticsearch.cluster-nodes=192.168.60.110:9300
# spring-data-jpa 相关配置
#在application.properties配置数据库引擎为InnoDB，同时需要将数据库表引擎设置为  innodb
# 否则事务回滚将会失败
# SHOW VARIABLES LIKE '%storage_engine%';
# alter table table_name engine=innodb;
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
# 指jpa对表生成的策略
spring.jpa.hibernate.ddl-auto=update
# 是否显示sql语句
spring.jpa.hibernate.show-sql=true
spring.jpa.hibernate.open-in-view=true
# 验证框架是否对数据操作验证
spring.jpa.hibernate.properties.javax.persistence.validation.mode=none
# 格式化sql
spring.jpa.hibernate.properties.hibernate.format_sql=true
#方言
spring.jpa.hibernate.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#表中字段命名策略,这里要引入hibernate的核心包，不然这个命名策略会报错
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy
# Spring Session相关配置
#spring.session.store-type=redis
#redis刷新模式 有2种:immediate/on_save
#spring.session.redis.flush-mode=on_save
#spring.session.redis. namespace=spring:session
  # Redis相关配置
  #这里我们以本地为例。实际视具体情况而定
#spring.redis.host=127.0.0.1
#spring.redis.port=6379
#session有效时间
#spring.servlet.session.timeout=30000
# # 主机
# 主机
#spring.rabbitmq.host=192.168.60.110
# 账号
#spring.rabbitmq.username=root
# 密码
#spring.rabbitmq.password=root
#访问路径
#spring.rabbitmq.virtual-host=/
#有关AmqpTemplate的配置
# 失败重试配置
#开启失败重试
#spring.rabbitmq.template.retry.enabled=true
#第一次重试的间隔时长
#spring.rabbitmq.template.retry.initial-interval=10000
# 最长重试间隔，超过这个间隔将不再重试
#spring.rabbitmq.template.retry.max-interval=30000
#下次重试间隔的倍数，此处是2即下次重试间隔是上次的2倍
#spring.rabbitmq.template.retry.multiplier=2
#缺省的交换机名称，此处配置后，发送消息如果不指定交换机就会使用这个
#spring.rabbitmq.templateexchange=liujie
#生产者确认机制，确保消息会正确发送，如果发送失败会有错误回执，从而触发重试
#spring.rabbitmq.publisher-confirms=true


# 是否显示ip前缀
eureka.instance.prefer-ip-address=true
eureka.instance.lease-renewal-interval-in-seconds: 5 # 每隔5秒发送一次心跳
eureka.instance.lease-expiration-duration-in-seconds: 10 # 10秒不发送就过期
eureka.instance.ip-address: 127.0.0.1
eureka.instance.instance-id=${spring.application.name}:${server.port}

eureka.client.serviceUrl.defaultZone=http://localhost:10086/eureka/
eureka.client.registry-fetch-interval-seconds=10
# 监控配置
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
# 自定义配置属性信息
# 登录校验的密钥
liujie.jwt.secret=liujie@Login(Auth}*^31)&Liujie%
# 公钥地址
liujie.jwt.pubKeyPath=C:\\ssh\\rsa.pub
# 私钥地址
liujie.jwt.priKeyPath=C:\\ssh\\rsa.pri
# 过期时间,单位分钟
liujie.jwt.expire=15



